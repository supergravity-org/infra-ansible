# {{ ansible_managed }}
# Django settings for AskBot enabled project.
import os.path
import logging
import sys
# import tendenci
import site

# This line is added so that we can import pre-packaged tendenci dependencies.
# ASKBOT_ROOT = os.path.abspath(os.path.dirname(tendenci.__file__))
# site.addsitedir(os.path.join(ASKBOT_ROOT, 'deps'))

DEBUG = {{ tendenci_debug }}  # set to True to enable debugging
TEMPLATE_DEBUG = DEBUG  # keep false when debugging jinja2 templates
INTERNAL_IPS = ['127.0.0.1']
ALLOWED_HOSTS = ['*']  # change this for better security on your site

#
# Databases
#
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.{{ tendenci_db_engine }}',  # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': '{{ tendenci_db_name }}',                      # Or path to database file if using sqlite3.
        'USER': '{{ tendenci_db_user }}',                      # Not used with sqlite3.
        'PASSWORD': '{{ tendenci_db_pass }}',                  # Not used with sqlite3.
        'HOST': '{{ tendenci_db_host }}',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '{{ tendenci_db_port }}',                      # Set to empty string for default. Not used with sqlite3.
        'TEST_CHARSET': 'utf8',              # Setting the character set and collation to utf-8
        'TEST_COLLATION': 'utf8_general_ci'  # is necessary for MySQL tests to work properly.
    }
}

#
# Outgoing email server settings
#
SERVER_EMAIL = '{{ tendenci_smtp_default_from }}'  # email address that error messages come from
DEFAULT_FROM_EMAIL = '{{ tendenci_smtp_default_from }}'
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_SUBJECT_PREFIX = '{{ tendenci_smtp_subject_prefix }}'
EMAIL_HOST = '{{ tendenci_smtp_host }}'
EMAIL_PORT = '{{ tendenci_smtp_port }}'
EMAIL_USE_TLS = {{ tendenci_smtp_tls_enabled | bool }}
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# A tuple that lists people who get code error notifications. When DEBUG=False and a view raises an
# exception, Django will email these people with the full exception information. Each member of the
# tuple should be a tuple of (Full name, email address).
ADMINS = {{ tendenci_admins|default("[]") }}

#
# Incoming email settings
#
# After filling out these settings - please go to the site's live settings and
# enable the feature "Email settings" -> "allow asking by email"
#
#   WARNING: command post_emailed_questions DELETES all
#            emails from the mailbox each time
#            do not use your personal mail box here!!!
#
IMAP_HOST = ''
IMAP_HOST_USER = ''
IMAP_HOST_PASSWORD = ''
IMAP_PORT = ''
IMAP_USE_TLS = False

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = '{{ tendenci_timezone }}'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True
LANGUAGE_CODE = '{{ tendenci_lang }}'

# Absolute path to the directory that holds uploaded media
# Example: "/home/media/media.lawrence.com/"
MEDIA_ROOT = '{{ tendenci_uploads_dir }}'
MEDIA_URL = '/uploads/'
STATIC_URL = '/static/'  # this must be different from MEDIA_URL

PROJECT_ROOT = '{{ tendenci_base_dir }}'

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'

# Make up some unique string, and don't share it with anybody.
SECRET_KEY = open(os.path.join(os.path.dirname(__file__), 'session_key')).read()

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = [
    'tendenci.skins.loaders.Loader',
    'django.template.loaders.app_directories.Loader',
    'django.template.loaders.filesystem.Loader'
    #'django.template.loaders.eggs.load_template_source'
]


MIDDLEWARE_CLASSES = [
    #'django.middleware.gzip.GZipMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    ## Enable the following middleware if you want to enable
    ## language selection in the site settings.
    'django.middleware.locale.LocaleMiddleware',
{% if tendenci_cache %}
    'django.middleware.cache.UpdateCacheMiddleware',
{% endif %}
    'django.middleware.common.CommonMiddleware',
{% if tendenci_cache %}
    'django.middleware.cache.FetchFromCacheMiddleware',
{% endif %}
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.middleware.sqlprint.SqlPrintingMiddleware',

    'stopforumspam.middleware.StopForumSpamMiddleware',

    #below is tendenci stuff for this tuple
    'tendenci.middleware.anon_user.ConnectToSessionMessagesMiddleware',
    'tendenci.middleware.forum_mode.ForumModeMiddleware',
    'tendenci.middleware.cancel.CancelActionMiddleware',
    'django.middleware.transaction.TransactionMiddleware',
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    'tendenci.middleware.view_log.ViewLogMiddleware',
    'tendenci.middleware.spaceless.SpacelessMiddleware'
]

ROOT_URLCONF = 'conf.urls'

#
# Upload settings
#
FILE_UPLOAD_TEMP_DIR = os.path.join(
                                os.path.dirname(__file__),
                                'tmp'
                            ).replace('\\','/')

FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler'
]
ASKBOT_ALLOWED_UPLOAD_FILE_TYPES = ['.jpg', '.jpeg', '.gif', '.bmp', '.png', '.tiff']
ASKBOT_MAX_UPLOAD_FILE_SIZE = {{ tendenci_max_upload_file_size }} * 1024  # result in bytes
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'


#TEMPLATE_DIRS = (,) #template have no effect in tendenci, use the variable below
#ASKBOT_EXTRA_SKINS_DIR = #path to your private skin collection
#take a look here http://tendenci.org/en/question/207/

TEMPLATE_CONTEXT_PROCESSORS = [
    'django.core.context_processors.request',
    'tendenci.context.application_settings',
    #'django.core.context_processors.i18n',
    'tendenci.user_messages.context_processors.user_messages',  # must be before auth
    'django.contrib.auth.context_processors.auth',  # this is required for the admin app
    'django.core.context_processors.csrf',  # necessary for csrf protection
    'tendenci.deps.group_messaging.context.group_messaging_context'
]


INSTALLED_APPS = [
    'longerusername',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.staticfiles',

    #all of these are needed for the tendenci
    'django.contrib.admin',
    'django.contrib.humanize',
    'django.contrib.sitemaps',
    'django.contrib.messages',
    #'debug_toolbar',
    #'haystack',  # optional, to enable haystack search
    'compressor',
    'tendenci',
    'tendenci.deps.django_authopenid',
    #'tendenci.importers.stackexchange', #se loader
    'south',
    'tendenci.deps.livesettings',
    'keyedcache',
    'robots',
    'django_countries',
    'djcelery',
    'djkombu',
    'followit',
    'tinymce',
    'group_messaging',
    'stopforumspam'
    #'avatar',#experimental use git clone git://github.com/ericflo/django-avatar.git$
]

{% if tendenci_cache %}
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': '{{ tendenci_cache_location }}',
        'OPTIONS': {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "IGNORE_EXCEPTIONS": True,
            "TIMEOUT": {{ tendenci_cache_timeout }}
        }
    }
}

CACHE_MIDDLEWARE_ANONYMOUS_ONLY = True
CACHE_MIDDLEWARE_SECONDS = 600

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
{% endif %}
SESSION_CACHE_ALIAS = "{{tendenci_name}}"

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'tendenci.deps.django_authopenid.backends.AuthBackend'
]

#logging settings
LOG_FILENAME = 'tendenci.log'
logging.basicConfig(
    filename=os.path.join('{{ tendenci_logs_dir }}', LOG_FILENAME),
    level=logging.CRITICAL,
    format='%(pathname)s TIME: %(asctime)s MSG: %(filename)s:%(funcName)s:%(lineno)d %(message)s',
)

###########################
#
#   this will allow running your forum with url like http://site.com/forum
#
#   ASKBOT_URL = 'forum/'
#
ASKBOT_URL = ''  # no leading slash, default = '' empty string
ASKBOT_TRANSLATE_URL = False  # translate specific URLs
_ = lambda v: v  # fake translation function for the login url
LOGIN_URL = '/%s%s%s' % (ASKBOT_URL, _('account/'), _('signin/'))
LOGIN_REDIRECT_URL = ASKBOT_URL  # adjust, if needed
# note - it is important that upload dir url is NOT translated!!!
# also, this url must not have the leading slash
ALLOW_UNICODE_SLUGS = False
ASKBOT_USE_STACKEXCHANGE_URLS = False  # mimic url scheme of stackexchange

# Celery Settings
BROKER_TRANSPORT = "djkombu.transport.DatabaseTransport"
CELERY_ALWAYS_EAGER = True

import djcelery
djcelery.setup_loader()
DOMAIN_NAME = '{{ tendenci_domain }}'

CSRF_COOKIE_NAME = '{{ tendenci_domain }}_csrf'
#https://docs.djangoproject.com/en/1.3/ref/contrib/csrf/
#CSRF_COOKIE_DOMAIN = DOMAIN_NAME

STATIC_ROOT = os.path.join(PROJECT_ROOT, "static")
STATICFILES_DIRS = (
    ('default/media', os.path.join(ASKBOT_ROOT, 'media')),
)
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder'
]

RECAPTCHA_USE_SSL = True


#HAYSTACK_SETTINGS
ENABLE_HAYSTACK_SEARCH = False
#Uncomment for multilingual setup:
#HAYSTACK_ROUTERS = ['tendenci.search.haystack.routers.LanguageRouter',]

#Uncomment if you use haystack
#More info in http://django-haystack.readthedocs.org/en/latest/settings.html
#HAYSTACK_CONNECTIONS = {
#            'default': {
#                        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
#            }
#}


TINYMCE_COMPRESSOR = True
TINYMCE_SPELLCHECKER = False
TINYMCE_JS_ROOT = os.path.join(STATIC_ROOT, 'default/media/js/tinymce/')
#TINYMCE_JS_URL = STATIC_URL + 'default/media/js/tinymce/tiny_mce.js'
TINYMCE_DEFAULT_CONFIG = {
    'plugins': 'tendenci_imageuploader,tendenci_attachment',
    'convert_urls': False,
    'theme': 'advanced',
    'content_css': STATIC_URL + 'default/media/style/tinymce/content.css',
    'force_br_newlines': True,
    'force_p_newlines': False,
    'forced_root_block': '',
    'mode': 'textareas',
    'oninit': "TinyMCE.onInitHook",
    'plugins': 'tendenci_imageuploader,tendenci_attachment',
    'theme_advanced_toolbar_location': 'top',
    'theme_advanced_toolbar_align': 'left',
    'theme_advanced_buttons1': 'bold,italic,|,bullist,numlist,|,undo,redo,|,link,unlink,tendenci_imageuploader,tendenci_attachment',
    'theme_advanced_buttons2': '',
    'theme_advanced_buttons3': '',
    'theme_advanced_path': False,
    'theme_advanced_resizing': True,
    'theme_advanced_resize_horizontal': False,
    'theme_advanced_statusbar_location': 'bottom',
    'width': '730',
    'height': '250'
}

#delayed notifications, time in seconds, 15 mins by default
NOTIFICATION_DELAY_TIME = 60 * 15

GROUP_MESSAGING = {
    'BASE_URL_GETTER_FUNCTION': 'tendenci.models.user_get_profile_url',
    'BASE_URL_PARAMS': {'section': 'messages', 'sort': 'inbox'}
}

{% if tendenci_multilang %}
ASKBOT_MULTILINGUAL = True

from django.utils.translation import ugettext_lazy as _
from django.conf import global_settings as gs

LANGUAGES = (
{# pull original language code out of the django dict #}
{% for code in tendenci_multilang_langs %}
  [x for x in gs.LANGUAGES if x[0] == '{{code}}'][0]
  {% if not loop.last %}
    ,
  {% endif %}
{% endfor %}
)
{% else %}
ASKBOT_MULTILINGUAL = False
{% endif %}


ASKBOT_CSS_DEVEL = False
if 'ASKBOT_CSS_DEVEL' in locals() and ASKBOT_CSS_DEVEL is True:
    COMPRESS_PRECOMPILERS = [
        ('text/less', 'lessc {infile} {outfile}')
    ]

COMPRESS_JS_FILTERS = []
COMPRESS_PARSER = 'compressor.parser.HtmlParser'
JINJA2_EXTENSIONS = [
    'compressor.contrib.jinja2ext.CompressorExtension'
]

COMPRESS_PRECOMPILERS = (
    ('text/less', 'lessc {infile} {outfile}'),
)

# Use syncdb for tests instead of South migrations. Without this, some tests
# fail spuriously in MySQL.
SOUTH_TESTS_MIGRATE = False

VERIFIER_EXPIRE_DAYS = 3

SFS_ALL_POST_REQUESTS = True
SFS_SOURCE_ZIP = "http://www.stopforumspam.com/downloads/listed_ip_7.zip"
SFS_CACHE_EXPIRE = 1 #day
SFS_LOG_EXPIRE = 1 #days
SFS_ZIP_FILENAME = "listed_ip_7.txt"

{% if tendenci_akismet_key %}
USE_AKISMET=True
AKISMET_API_KEY='{{tendenci_akismet_key}}'
{% endif %}
