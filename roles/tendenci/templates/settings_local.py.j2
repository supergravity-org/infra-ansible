import os
# Method that pulls settings from the standard settings.py
# file so that you can append or override items.
def get_setting(setting):
    import settings
    return getattr(settings, setting)

# SECRET_KEY='your_unique_secret_key_Qoh222VG9pq8P9hOapH'
# SITE_SETTINGS_KEY='tendenci_site_key_bdc635k2-283d-4a2c-a477-339ea866'
SECRET_KEY = open(os.path.join(os.path.dirname(__file__), 'session_key')).read()
SITE_SETTINGS_KEY = open(os.path.join(os.path.dirname(__file__), 'session_key')).read()


# INSTALLED_APPS = get_setting('INSTALLED_APPS')
from tendenci.settings import INSTALLED_APPS, MIDDLEWARE_CLASSES


INSTALLED_APPS += (
    'django.contrib.gis',
    'tendenci.apps.committees',
    'tendenci.apps.case_studies',
    'tendenci.apps.donations',
    'tendenci.apps.speakers',
    'tendenci.apps.staff',
    'tendenci.apps.studygroups',
    'tendenci.apps.videos',
    'tendenci.apps.testimonials',
    'tendenci.apps.social_services',
    # -- explorer block --
    'tendenci.apps.explorer_extensions',
    'explorer',
    # -- end of explorer block --
    'sg_main',
    'oauth2_provider',
    'mama_cas',
    'rest_framework',
    # 'provider',
    # 'provider.oauth2',
)

MIDDLEWARE_CLASSES += (
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware'
)

USE_I18N = True
ALLOWED_HOSTS = ["*"]

SITE_MODE = 'prod'

ADMINS = ()
MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': '{{tendenci_db_name}}',
        'HOST': 'localhost',
        'USER': '{{ tendenci_db_user }}',
        'PASSWORD': '{{ tendenci_db_pass }}',
        'PORT': 5432,
        'autocommit': True,
        }
}


SSL_ENABLED = False
CELERY_IS_ACTIVE = True

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'Europe/Berlin'

# -------------------------------------- #
# DEBUG OPTIONS
# -------------------------------------- #
SENTRY_DSN = ""
if SENTRY_DSN:
    INSTALLED_APPS += ('raven.contrib.django',)

# ---------------------------------------#
# PAYMENT GATEWAY
# ---------------------------------------#
# authorizenet, firstdata (the first two)
MERCHANT_LOGIN = ''
MERCHANT_TXN_KEY = ''
AUTHNET_MD5_HASH_VALUE = False

# paypalpayflowlink (currently US only unfortunately per PayPal)
PAYPAL_MERCHANT_LOGIN = ''
PAYFLOWLINK_PARTNER = 'PayPal'

# stripe
STRIPE_SECRET_KEY = ''
STRIPE_PUBLISHABLE_KEY = ''

# -------------------------------------- #
# EMAIL
# -------------------------------------- #
# remove or comment out this line once you have your email backend set up.
EMAIL_BACKEND = 'django.core.mail.backends.dummy.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_TLS = False
EMAIL_HOST = 'localhost'
# EMAIL_PORT = 25
# EMAIL_HOST_USER = None
# EMAIL_HOST_PASSWORD = None

#EMAIL_BACKEND = "django_ses.SESBackend"
# AWS_ACCESS_KEY_ID = ''
# AWS_SECRET_ACCESS_KEY = ''

DEFAULT_FROM_EMAIL = "no-reply@{{ tendenci_domain }}"
SERVER_EMAIL = DEFAULT_FROM_EMAIL

# -------------------------------------- #
# CACHE
# -------------------------------------- #

SITE_CACHE_KEY = SECRET_KEY
CACHE_PRE_KEY = SITE_CACHE_KEY


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

BROKER_URL = '{{ tendenci_cache_location[0] }}'
CELERY_ACCEPT_CONTENT = ['json', 'yaml']

# Use Redis as the cache backend for extra performance
# (requires the django-redis-cache package):
# http://wagtail.readthedocs.org/en/latest/howto/performance.html#cache

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': '{{ tendenci_cache_location }}',
        'KEY_PREFIX': '{{tendenci_name}}',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'TIMEOUT': 300
        }
    }
}


# sql explorer only allows superuser
EXPLORER_PERMISSION_VIEW =  lambda u: u.is_superuser
EXPLORER_PERMISSION_CHANGE =  lambda u: u.is_superuser

# debug mode
DEBUG = {{ kitchen_run == True}}

TEMPLATES = get_setting('TEMPLATES')
TEMPLATES[0]['OPTIONS']['debug'] = DEBUG

# if os.getenv('DISABLE_MIGRATIONS') or {{ kitchen_run == True}}:
#     class DisableMigrations(object):
#         def __contains__(self, item):
#             return True
#         def __getitem__(self, item):
#             return "notmigrations"
#
#     MIGRATION_MODULES = DisableMigrations()

# Turn off the template caching
# TEMPLATES[0]['OPTIONS']['loaders'] = [
#                 'app_namespace.Loader',
#                 'tendenci.apps.theme.template_loaders.Loader',
#                 'django.template.loaders.filesystem.Loader',
#                 'django.template.loaders.app_directories.Loader',
#             ]

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope'}
}

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    # Uncomment following if you want to access the admin
    'django.contrib.auth.backends.ModelBackend'
)

REST_FRAMEWORK = {
    #'DEFAULT_PERMISSION_CLASSES': (
    #  'rest_framework.permissions.IsAuthenticated',
    #  'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    #),
    'DEFAULT_AUTHENTICATION_CLASSES': (
      # 'rest_framework.authentication.OAuth2Authentication',
      'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    )
}

{% if kitchen_run %}
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/tmp/django-sg-main.log',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
{% endif %}
